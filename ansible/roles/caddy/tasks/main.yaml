---
- name: Install packages
  ansible.builtin.import_tasks: pkgs.yaml

- name: Ensure the group exists
  become: true
  ansible.builtin.group:
    name: "{{ linux_group.name }}"
    state: present
    gid: "{{ linux_group.gid }}"

- name: Ensure the user exists
  become: true
  ansible.builtin.user:
    name: "{{ linux_user.name }}"
    uid: "{{ linux_user.uid }}"
    group: "{{ linux_group.name }}"

- name: Ensure the caddy dir exists
  become: true
  become_user: "{{ linux_user.name }}"
  ansible.builtin.file:
    path: "{{ data_dir }}"
    state: directory
    mode: "0770"

- name: Ensure the data dir exists
  become: true
  become_user: "{{ linux_user.name }}"
  ansible.builtin.file:
    path: "{{ data_dir }}/data"
    state: directory
    mode: "0775"

- name: Ensure the config dir exists
  become: true
  become_user: "{{ linux_user.name }}"
  ansible.builtin.file:
    path: "{{ data_dir }}/config"
    state: directory
    mode: "0775"

- name: Copy the Caddyfile
  become: true
  become_user: "{{ linux_user.name }}"
  ansible.builtin.template:
    src: Caddyfile.j2
    dest: "{{ data_dir }}/Caddyfile"
    mode: "0444"
  register: caddyfile

- name: Copy the root cert
  become: true
  ansible.builtin.copy:
    src: /root/.step/certs/root_ca.crt
    dest: /home/caddy/root_ca.crt
    owner: "{{ linux_user.name }}"
    group: "{{ linux_group.name }}"
    remote_src: true

- name: Create the container
  become: true
  community.docker.docker_container:
    name: caddy
    image: caddy:2.6.1-alpine
    capabilities: net_bind_service
    ports:
      - 80:80
      - 443:443
    restart_policy: always
    recreate: "{{ caddyfile.changed }}"
    volumes:
      - "{{ data_dir }}/data:/data"
      - "{{ data_dir }}/config:/config"
      - "{{ data_dir }}/Caddyfile:/etc/caddy/Caddyfile:ro"
      - /home/caddy/root_ca.crt:/root_ca.crt:ro
