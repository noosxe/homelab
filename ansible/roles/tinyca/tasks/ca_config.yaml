---
- name: Check for {{ ca_json }}
  become: true
  become_user: "{{ ca_user }}"
  ansible.builtin.stat:
    path: "{{ ca_json }}"
  register: ca_json_result

- name: ca.json already exists
  ansible.builtin.debug:
    msg: "Config already exists!"
  when: ca_json_result.stat.exists

- name: Init step ca
  become: true
  become_user: "{{ ca_user }}"
  ansible.builtin.command:
    cmd: step ca init --name {{ ca_name }} --dns {{ ca_dns }} --address 0.0.0.0:443 --provisioner "{{ ca_provisioner }}" --password-file "{{ ca_dir }}/{{ password_file }}"
    creates: "{{ ca_json }}"
  environment:
    STEPPATH: "{{ ca_dir }}"
  register: stepca_output
  when: not ca_json_result.stat.exists

- name: Display step ca init output
  debug:
    msg: "{{ item }}"
    verbosity: 2
  with_items:
    - "{{ stepca_output.stdout_lines }}"
    - "{{ stepca_output.stderr_lines }}"
  when: stepca_output.stdout_lines is defined and stepca_output.stderr_lines is defined

- name: Add ACME provisioner
  become: true
  become_user: "{{ ca_user }}"
  ansible.builtin.command:
    cmd: step ca provisioner add acme --type acme --ca-config {{ ca_json }}
  environment:
    STEPPATH: "{{ ca_dir }}"
  when: not ca_json_result.stat.exists

- name: Copy files from the usb drive
  become: true
  become_user: "{{ ca_user }}"
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - {
        src: "{{ ca_usb_dir }}/ca/certs/intermediate_ca.crt",
        dest: "{{ ca_dir }}/certs/intermediate_ca.crt",
      }
    - {
        src: "{{ ca_usb_dir }}/ca/certs/root_ca.crt",
        dest: "{{ ca_dir }}/certs/root_ca.crt",
      }
    - {
        src: "{{ ca_usb_dir }}/ca/secrets/root_ca_key",
        dest: "{{ ca_dir }}/secrets/root_ca_key",
      }
    - {
        src: "{{ ca_usb_dir }}/ca/secrets/intermediate_ca_key",
        dest: "{{ ca_dir }}/secrets/intermediate_ca_key",
      }

- name: Unmount the flashdrive
  become: true
  mount:
    path: "{{ ca_usb_dir }}"
    state: unmounted

- name: Start step CA
  become: true
  systemd:
    name: step-ca
    daemon-reload: yes
    enabled: yes
    state: restarted
