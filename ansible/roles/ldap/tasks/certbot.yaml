---
- name: Install root certificate
  become: true
  command: step ca bootstrap --install --force --ca-url={{ tiny_ca_url }} --fingerprint={{ root_fingerprint }}

- name: Install certbot
  become: true
  snap:
    classic: true
    name: certbot

- name: Stop and disable snap.certbot.renew.timer
  become: true
  ansible.builtin.systemd:
    name: snap.certbot.renew.timer
    state: stopped
    enabled: no

- name: Stop and disable snap.certbot.renew.service
  become: true
  ansible.builtin.systemd:
    name: snap.certbot.renew.service
    state: stopped
    enabled: no

- name: Stop apache2
  become: true
  systemd:
    name: apache2
    state: stopped

- name: Fetch the certs
  become: true
  raw: REQUESTS_CA_BUNDLE=$(step path)/certs/root_ca.crt certbot certonly -n --standalone --agree-tos --email kirlevon@gmail.com -d ldap.servo.local --server {{ tiny_ca_acme }}

- name: Replace the renewal before expiry time
  become: true
  lineinfile:
    path: /etc/letsencrypt/renewal/ldap.servo.local.conf
    regexp: "renew_before_expiry ="
    line: renew_before_expiry = 8 hours

- name: Install certs configurator script
  become: true
  template:
    src: certs.sh.j2
    dest: /usr/local/bin/renew.sh
    mode: "0744"

- name: Run the certs configurator
  become: true
  command: /usr/local/bin/renew.sh

- name: Install the certbot renewal script
  become: true
  template:
    src: certbot.sh.j2
    dest: /usr/local/bin/certbot.sh
    mode: "0744"

- name: Configure cron job to renew certs
  become: true
  cron:
    name: renew certs
    minute: "*/15"
    job: /usr/local/bin/certbot.sh 2>&1 | /usr/bin/logger -t CRONOUTPUT
