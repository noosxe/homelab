---
- name: Stop and disable snap.certbot.renew.timer
  become: true
  ansible.builtin.systemd:
    name: snap.certbot.renew.timer
    state: stopped
    enabled: false

- name: Stop and disable snap.certbot.renew.service
  become: true
  ansible.builtin.systemd:
    name: snap.certbot.renew.service
    state: stopped
    enabled: false

- name: Fetch the certs
  become: true
  ansible.builtin.raw: REQUESTS_CA_BUNDLE=$(step path)/certs/root_ca.crt
    certbot certonly -n --standalone --agree-tos
    --email {{ email }} -d {{ domain }} --server {{ tiny_ca_acme }}

- name: Replace the renewal before expiry time
  become: true
  ansible.builtin.lineinfile:
    path: /etc/letsencrypt/renewal/{{ domain }}.conf
    regexp: "renew_before_expiry ="
    line: renew_before_expiry = 8 hours

- name: Install certs installation script
  become: true
  ansible.builtin.template:
    src: cert_install.sh.j2
    dest: /usr/local/bin/cert_install.sh
    mode: "0744"

- name: Run the certs configurator
  become: true
  ansible.builtin.command: /usr/local/bin/cert_install.sh
  ignore_errors: true

- name: Install the certbot renewal script
  become: true
  ansible.builtin.template:
    src: certbot.sh.j2
    dest: /usr/local/bin/certbot.sh
    mode: "0744"

- name: Configure cron job to renew certs
  become: true
  ansible.builtin.cron:
    name: renew certs
    minute: "*/15"
    job: /usr/local/bin/certbot.sh 2>&1 | /usr/bin/logger -t CRONOUTPUT
